% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/e.R
\name{exchangeImage}
\alias{exchangeImage}
\title{Exchange image}
\usage{
exchangeImage(object, image, resize = NULL, verbose = NULL, ...)
}
\arguments{
\item{object}{An object of class \code{SPATA2}.}

\item{image}{Image input or character value. If character, input is interpreted as a directory
to a file or to an URL and is read with \code{EBImage::readImage()}. The read image
should be of type \emph{.png}, \emph{.jpeg} or \emph{.tiff}.

If not character, the function ensures that the input is - or is convertible - to
class \code{Image} via \code{EBimage::as.Image()}. If it fails, an error is thrown.}

\item{resize}{Numeric vector of length two, numeric value or NULL. If numeric,
specifies the size with which the image is eventually saved.

If \code{resize} is of length one, e.g. \code{resize} = 3, the image dimensions
of the old image are multiplied with the \code{resize}, here with 3, to create the dimensions
under which the new image is saved. This is useful, as the relation between width
and height of the new image should not change to ensure that the barcode-spots
overlap perfectly with the histology image.

If \code{resize} is of length two, e.g. \code{resize} = c(1000, 1200), the image
dimensions of the new image are set to exactly that. First value sets the width,
the second value sets the height.}

\item{verbose}{Logical. If set to TRUE informative messages regarding
the computational progress will be printed.

(Warning messages will always be printed.)}

\item{...}{Used to absorb deprecated arguments or functions.}
}
\description{
Exchanges histology images and scales the coordinates
accordingly. Use argument \code{resize} to downscale images that
are too big for R to handle.
}
\details{
The function requires the \code{SPATA2} object to already contain an
image. This is because images of different resolution (total number of pixels)
require the barcode-spots x- and y-coordinates to be scaled. The scale
factor is computed by comparing the resolution of the old image with
the one from the image that is supposed to replace the old one (after resizing,
if resizing is desired).
}
