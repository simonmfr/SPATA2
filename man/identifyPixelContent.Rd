% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/i.R
\name{identifyPixelContent}
\alias{identifyPixelContent}
\alias{identifyPixelContent,SPATA2-method}
\alias{identifyPixelContent,SpatialData-method}
\alias{identifyPixelContent,HistoImage-method}
\alias{identifyPixelContent,Image-method}
\title{Identify pixel content}
\usage{
identifyPixelContent(object, ...)

\S4method{identifyPixelContent}{SPATA2}(
  object,
  method = "otsu",
  img_name = activeImage(object),
  sigma = 0,
  percentile = 0,
  compactness_factor = 10,
  superpixel = 600,
  eps = 1.414 * 2,
  minPts = 0.005,
  frgmt_threshold = c(0.001, 0.05),
  use_capture_area = containsCaptureArea(object),
  verbose = TRUE
)

\S4method{identifyPixelContent}{SpatialData}(
  object,
  method = "otsu",
  sigma = 0,
  img_name = activeImage(object),
  percentile = 0,
  compactness_factor = 10,
  superpixel = 1000,
  eps = 1.414 * 2214,
  minPts = 0.005,
  frgmt_threshold = c(0.001, 0.05),
  use_capture_area = containsCaptureArea(object),
  bg_dark = FALSE,
  verbose = TRUE
)

\S4method{identifyPixelContent}{HistoImage}(
  object,
  method = "otsu",
  sigma = 0,
  percentile = 0,
  compactness_factor = 10,
  superpixel = 1000,
  eps = 1.414 * 2214,
  minPts = 0.005,
  frgmt_threshold = c(0.001, 0.05),
  capture_area = NULL,
  bg_dark = FALSE,
  verbose = TRUE
)

\S4method{identifyPixelContent}{Image}(
  object,
  method = "otsu",
  sigma = 0,
  percentile = 0,
  compactness_factor = 10,
  superpixel = 1000,
  frgmt_threshold = c(0.001, 0.05),
  eps = 1.414 * 2214,
  minPts = 0.005,
  capture_area = NULL,
  bg_dark = FALSE,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{object}{An object of class \code{\link{SPATA2}} or, in case of S4 generics,
objects of classes for which a method has been defined.}

\item{...}{Used to absorb deprecated arguments or functions.}

\item{method}{Character value. The method to use. Either \emph{'otsu'} or \emph{'sps'}. See details
for more information. Defaults to \emph{'otsu'}. (\emph{'sps'} takes significantly longer, only
recommened if \emph{'otsu'} does not provide any useful results).}

\item{img_name}{Character value. The name of the image of interest.
If \code{NULL}, the \link[=concept_active]{active} image is chosen by default. Either way, must
be one of \code{\link[=getImageNames]{getImageNames()}}.}

\item{sigma}{Numeric value specifying the standard deviation for the Gaussian
blur applied to the grayscale image. Higher values result in more smoothing. \code{0} skips
smoothing. Default is \code{0}.}

\item{percentile}{Numeric value between 0 and 100 (inclusive) specifying the percentile
threshold for background color determination. If bigger than 0, it determines
the \strong{top} percentile of colors to identify as background based on the frequency
they appear in the image. This can improve identifying tissue pixels in images
where the edge between tissue and background is continuous rather than sharp
and thus difficult to identify using computational approaches. It follows the
hypothesis that the background consists of many pixels of equal color while
the tissue consists of pixels of heterogenous colors.

Values between 0-100 are valid. Usually values between 0.5-2.5 work well.
Test resuls with \code{\link[=plotPixelContent]{plotPixelContent()}}.}

\item{compactness_factor}{Numeric value controlling the compactness of superpixels.
Given as an argument to \verb{$spixel_segmentation()} function.}

\item{superpixel}{Numeric value specifying the number of superpixels to compute.
Given as an argument to \verb{$spixel_segmentation()} function. Increased values can
improve the output but increase runtime.}

\item{eps}{Numeric value specifying the value of \code{eps} parameter used in \code{dbscan::dbscan()}
when applied on the tissue pixels. If the value is less than 1, it is calculated
as a percentage of the width or height of the image, depending on which is larger.
If the value is greater than or equal to 1, it is taken as an absolute value.

Defaults to 1.414\emph{2}2, twice the distance between two diagonally adjacent pixels in a
uniform pixel space.}

\item{minPts}{Numeric value specifying the value of \code{minPts} parameter used in \code{dbscan::dbscan()}
when applied on the tissue pixels identified as potential tissue. If the value is less than 1,
it is calculated as a percentage of the width or height of the image, depending on which is larger.
If the value is greater than or equal to 1, it is taken as an absolute value.

Defaults to 0.005, which is 0.5\% of the total number of pixels.}

\item{frgmt_threshold}{Numeric vector of length 2 specifying the range of the number of pixels
an identified non-background-object in the image must have to be considered a tissue fragment. Objects with a lower number
of pixels than the minimum threshold are considered artifacts, and objects with a higher number
of pixels than the maximum threshold are considered tissue sections. If a threshold value is less than 1,
it is calculated as a percentage of the total number of pixels in the image.
If a threshold value is greater than or equal to 1, it is taken as an absolute value.}

\item{use_capture_area}{Logical value. If \code{TRUE}, the capture area as obtained by \code{\link[=getCaptureArea]{getCaptureArea()}}
is used to guide the analysis. Defaults to \code{TRUE} as long as the object contains a valid
capture area data.frame.}

\item{verbose}{Logical. If \code{TRUE}, informative messages regarding
the computational progress will be printed.

(Warning messages will always be printed.)}

\item{bg_dark}{Logical value. Should be set to \code{TRUE}, if the background is darker than
the tissue. Defaults to \code{FALSE}.}

\item{capture_area}{Data.frame or \code{NULL}. If data.frame contains the vertices of the polygon
that corresponds to the capture area in which the tissue is located in. Data.frame should have
at least three rows with variables idx (integer), x (numeric), y (numeric).}
}
\value{
The method for class \code{Image} returns a data.frame of the following
variables.

\itemize{
\item{\emph{pixel}:}{ character. Pixel index.}
\item{\emph{width}:}{ numeric. Pixel position on horizontal axis of the image.}
\item{\emph{height}:}{ numeric. Pixel position on the vertical axis of the image.}
\item{\emph{clusterK2}:}{ character. Either \emph{'background'} or \emph{'tissue'}. (if \emph{method = 'sps'})}
\item{\emph{colTiss#} :}{ numeric. Numeric variables that correspond to the color dimensions
of the image mask based on which the clustering of \emph{clusterK2} was conducted. (if \emph{method = 'sps'})}
\item{\emph{clusterDBSCAN}:}{ character. Cluster results of dbscan::dbscan() after removal
of background pixels.}
\item{\emph{clusterDBSCAN_size}:}{numeric. Size of each dbscan cluster.}
\item{\emph{content}:}{ character. The identified content of each pixel.}
}

Methods for S4-classes serving as containers return the input object with the
the results stored in the corresponding slots.
}
\description{
Determines the type of content displayed by each pixel in the image,
categorizing it as tissue from tissue segments or fragments, artifacts, or background.
}
\details{
This function classifies pixels in an image as tissue, background, or artifacts using two primary methods:
Otsu's method or Superpixel Segmentation (SPS), followed by DBSCAN clustering for refinement.

\itemize{
\item \strong{Otsu's Method:} Applies global thresholding to separate tissue from the background
using Otsu's method, which minimizes intra-class variance.
Parameters that affect the output: \code{sigma}
\item \strong{Superpixel Segmentation (SPS):} Divides the image into superpixels using the SLIC algorithm.
Superpixels are classified into tissue or background using k-means clustering.
Parameters that affect the output: \code{percentile}, \code{compactness_factor}, \code{superpixel}
}

The resulting binary image is refined with DBSCAN clustering to identify contiguous
tissue sections, fragments, and artifacts.
}
\note{
If \code{img_name} specifies multiple images, the function
iterates over all of them. If it is \code{NULL} the active image is picked.
}
\references{
Nobuyuki Otsu, "A threshold selection method from gray-level histograms".
IEEE Trans. Sys., Man., Cyber. 9 (1): 62-66. doi:10.1109/TSMC.1979.4310076 (1979)
}
\seealso{
For subsequent image processing: \code{\link{identifyTissueOutline(..., method = 'image')}}.
For visualization of results: \code{\link[=plotImageMask]{plotImageMask()}}, \code{\link[=plotPixelContent]{plotPixelContent()}}.
For extraction of results: \code{\link[=getPixelDf]{getPixelDf()}}.
}
