% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotSurface.R
\name{plotSurface}
\alias{plotSurface}
\alias{plotSurface,SPATA2-method}
\alias{plotSurface,data.frame-method}
\alias{plotSurface,SpatialAnnotationScreening-method}
\alias{plotSurface,SpatialGradientScreening-method}
\alias{plotSurfaceInteractive}
\title{Plot the surface of the sample}
\usage{
plotSurface(object, ...)

\S4method{plotSurface}{SPATA2}(
  object,
  color_by = NULL,
  alpha_by = NULL,
  smooth = FALSE,
  smooth_span = 0.2,
  pt_alpha = NULL,
  pt_clr = NULL,
  pt_clrp = NULL,
  pt_clrsp = NULL,
  pt_size = NULL,
  outline = FALSE,
  outline_fct = c(2.125, 2.75),
  clrp_adjust = NULL,
  transform_with = NULL,
  use_scattermore = NULL,
  sctm_pixels = c(1024, 1024),
  bcs_rm = base::character(0),
  na_rm = FALSE,
  xrange = getCoordsRange(object)$x,
  yrange = getCoordsRange(object)$y,
  display_image = NULL,
  img_alpha = 1,
  img_name = NULL,
  geom = "point",
  mtr_name = activeMatrix(object),
  verbose = NULL,
  ...
)

\S4method{plotSurface}{data.frame}(
  object,
  color_by = NULL,
  alpha_by = NULL,
  pt_alpha = 0.9,
  pt_clr = "lightgrey",
  pt_clrp = "milo",
  pt_clrsp = "inferno",
  pt_size = 2,
  image = NULL,
  clrp_adjust = NULL,
  use_scattermore = FALSE,
  sctm_pixels = c(1024, 1024),
  sctm_interpolate = FALSE,
  outline = FALSE,
  outline_coords = NULL,
  outline_fct = c(2.125, 2.75),
  order_by = NULL,
  order_desc = FALSE,
  na_rm = TRUE,
  ...
)

\S4method{plotSurface}{SpatialAnnotationScreening}(
  object,
  color_by = "rel_loc",
  line_color = "black",
  line_size = 1,
  fill = ggplot2::alpha("lightgrey", 0.25),
  pt_clrp = "npg",
  ...
)

\S4method{plotSurface}{SpatialGradientScreening}(
  object,
  color_by = "rel_loc",
  line_color = "black",
  line_size = 1,
  pt_clrp = "npg",
  ...
)

plotSurfaceInteractive(object)
}
\arguments{
\item{object}{An object of class \code{\link{SPATA2}} or, in case of S4 generics,
objects of classes for which a method has been defined.}

\item{...}{Additional arguments given to \code{scale_color_add_on()}.}

\item{color_by}{Character value. The \link[=concept_variables]{variables} by which
to color the data points.}

\item{smooth}{Logical. If TRUE, a loess fit is used to smooth the values.}

\item{smooth_span}{Numeric value. Controls the degree of smoothing.
Given to argument \code{span} of \code{stats::loess()}.}

\item{pt_alpha}{Numeric value. Specifies the degree of transparency of all points.}

\item{pt_clr}{Character value. Specifies the color of all points.}

\item{pt_clrp}{The color palette to be used if the specified variable displayed by
color is categorical/discrete. Run \code{validColorPalettes()} to see valid input.}

\item{pt_clrsp}{The color spectrum to be used if the specified variable displayed by
color is continuous. Run \code{validColorSpectra()} to see valid input.}

\item{pt_size}{Numeric value. Specifies the size of all points.}

\item{outline}{Logical, indicating whether to add an outline to the points.
If \code{TRUE}, an outline will be added around the points to enhance visibility.
Default is FALSE.}

\item{clrp_adjust}{Named character vector or NULL. If character, it adjusts the
color palette that is used to represent the groups. Names of the input vector must refer
to the group and the respective named element denotes the color with which to
represent the group.}

\item{transform_with}{List or \code{NULL.} If list, can be used to transform continuous variables before usage.
Names of the list slots refer to the variable. The content of the slot refers to the transforming functions.
E.g if the variable of interest is \emph{GFAP} gene expression, the following would work:

\itemize{
\item{Single function:}{ \code{transform_with = log10}},
\item{Multiple functions:}{ \verb{transform_with = list(GFAP = list(log10, log2)}}
}

In case of plotting:
Useful if you want to apply more than one transformation on variables mapped to
plotting aesthetics. Input for \code{transform_with} is applied before the
respective \code{<aes>_trans} argument.}

\item{use_scattermore}{Logical value. If \code{TRUE}, data points are plotted with
\code{scattermore::geom_scattermore()} which allows quick plotting of several
thousand data points. If the number of data points plotted is bigger than
10.000 it is used anyway.}

\item{bcs_rm}{Character vector or \code{NULL}. If character, specifies the observations
to be removed prior to analysis or visualization by their barcode.}

\item{xrange, yrange}{\link[=concept_distance_measure]{Distance vector} of length
two or \code{NULL}. If not \code{NULL}, specifies the x- and y-range to which
the spatial output is cropped. E.g. \code{xrange = c(200, 500)} results in
the two dimensional space being cropped from x-coordinate 200px up to
x-coordinate 500px. If \code{NULL}, the original range is used.}

\item{img_alpha}{Numeric value. Sets the transparency for the image.}

\item{img_name}{Character value. The name of the image of interest.
If \code{NULL}, the \link[=concept_active]{active} image is chosen by default. Either way, must
be one of \code{\link[=getImageNames]{getImageNames()}}.}

\item{mtr_name}{Character value. The name of the matrix of interest. Defaults
to the active matrix of the assay, as denoted by \code{\link[=activateMatrix]{activateMatrix()}}.}

\item{verbose}{Logical. If \code{TRUE}, informative messages regarding
the computational progress will be printed.

(Warning messages will always be printed.)}

\item{sctm_interpolate, sctm_pixels}{Given to the corresponding arguments
of \code{scattermore::geom_scattermore()}. Note: With increasing \code{sctm_pixels}
the point size must be adjusted with the argument \code{pt_size}.}

\item{order_by}{Character value or \code{NULL}. If character, the specified
variable is used to order the data points.}

\item{order_desc}{Logical value. If \code{TRUE}, reverses the arrangement specified
via \code{order_by} and/or \code{order}.}

\item{line_color}{Character. Affects color of the main lines of the plot.}

\item{line_size}{Numeric. Affects size of the main lines of the plot.}

\item{fill}{Character value or NA. If character, specifies the color with which
the outline of the spatial annotation is filled.}

\item{outline_width}{Numeric vector of length 2, specifying the factor with which
the \code{pt_size} is multiplied to create the white layer (first value) and the
black layer (second value).}
}
\value{
Returns a ggplot that can be additionally customized according
to the rules of the ggplot2 framework.
}
\description{
Displays the spatial dimension of the sample and colors the
surface according to the expression of genes, gene sets or features. There
are methods for multiple classes:

\itemize{
\item{\code{SPATA2}:}{ The most versatile method with which all sorts of spatial
data can be visualized.}
\item{\code{data.frame}:}{ Method for a data.frame that contains at least the
variables \emph{x} and \emph{y}.}
\item{\code{\link{SpatialAnnotationScreening}}:}{ Method to visualize the surface based
on the setup with which \code{\link[=spatialAnnotationScreening]{spatialAnnotationScreening()}} was run.}
\item{\code{\link{SpatialTrajectoryScreening}}:}{ Method to visualize the surface based
on the setup with which \code{\link[=spatialAnnotationScreening]{spatialAnnotationScreening()}} was run.}
}
}
\note{
The methods for \code{SpatialAnnotationScreening}- and \code{SpatialTrajectoryScreening}
exist to quickly visualize the set up with which the screening was conducted. The ...
can be used to reach the \code{plotSurface()} method for data.frames with all its
plotting parameters. For more controll, please use a combination of \code{plotSurface()} with the
\code{SPATA2} object and \verb{ggpLayer*} functions.
}
