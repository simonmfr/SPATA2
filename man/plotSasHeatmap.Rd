% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotN-S.R
\name{plotSasHeatmap}
\alias{plotSasHeatmap}
\title{Plot SAS heatmap}
\usage{
plotSasHeatmap(
  object,
  variables,
  id = idSA(object),
  distance = distToEdge(object, id),
  binwidth = recBinwidth(object),
  n_bins_dist = NA_integer_,
  angle_span = c(0, 360),
  unit = getSpatialMethod(object)@unit,
  arrange_rows = "input",
  method_gs = "mean",
  smooth_span = 0.4,
  multiplier = 10,
  clrsp = "inferno",
  .cols = dplyr::everything(),
  .f = NULL,
  border_linealpha = 0.75,
  border_linecolor = "black",
  border_linesize = 1,
  border_linetype = "dashed",
  verbose = NULL,
  ...
)
}
\arguments{
\item{object}{An object of class \code{spata2} or, in case of S4 generics,
objects of classes for which a method has been defined.}

\item{variables}{Character vector. All numeric variables (meaning genes,
gene-sets and numeric features) that are supposed to be included in
the screening process.}

\item{id}{Character value specifying the ID of the spatial annotation of interest.
If there is only one spatial annotation in the object, the function
will default to using it. However, if there are multiple annotations,
this argument must be explicitly specified to identify the target annotation.}

\item{distance}{Distance value. Specifies the distance from the border of the
spatial annotation to the \emph{horizon} in the periphery up to which the screening
is conducted. (See details for more.) - See details of \code{?is_dist} for more
information about distance values. Defaults to a distance that covers the whole
tissue using \code{\link[=distToEdge]{distToEdge()}}.}

\item{binwidth}{Distance value. The width of the distance bins to which
each data point is assigned. Defaults to our platform dependent
recommendation using \code{\link[=recBinwidth]{recBinwidth()}}.}

\item{angle_span}{Numeric vector of length 2. Confines the area screened by
an angle span relative to the center of the spatial annotation.
(See details fore more.)}

\item{unit}{Character value. The unit in which the distance
to the spatial annotation is displayed on the x-axis.

If \code{FALSE}, plots the bin numbers instead.}

\item{arrange_rows}{Alter the way the rows of the heatmap
are displayed in order to highlight patterns. Currently either \emph{'maxima'},
\emph{'minima'} or \emph{'input'}. If \emph{'input'}, variables are displayed
in the same order as they are provided in the argument \code{variables}.}

\item{method_gs}{Character value. The method according to which gene sets will
be handled specified as a character of length one. This can be either 'mean
or one of 'gsva', 'ssgsea', 'zscore', or 'plage'. The latter four will be given to gsva::GSVA().}

\item{smooth_span}{Numeric value. Controls the degree of smoothing.
Given to argument \code{span} of \code{stats::loess()}.}

\item{multiplier}{Numeric value. For better visualization the transient pattern
is smoothed with a loess fit. The total number of predicted values (via \code{stats::predict()})
is the number of bins multiplied with the input for this argument.}

\item{clrsp}{Character value. Specifies the color spectrum to be used to represent
continuous values of numeric variables. Run \code{validColorSpectra()} to obtain
valid input options.}

\item{border_linealpha, border_linecolor, border_linesize, border_linetype}{Given
to \code{ggplot2::geom_vline()}. Adjusts appearance of the vertical line that
represents the border of the spatial annotation.}

\item{verbose}{Logical. If set to TRUE informative messages regarding
the computational progress will be printed.

(Warning messages will always be printed.)}

\item{...}{Used to absorb deprecated arguments or functions.}
}
\value{
A ggplot.
}
\description{
Plots gene expression changes against the distance
to the spatial annotation using a heatmap.
}
\section{Distance measures}{


Several functions in \code{SPATA2} have arguments that take \emph{distance input}.
To specifically refer to a distance the unit must be specified. There are
three ways to create valid input for these arguments.

\strong{1. In pixel:}

There are two valid input options to specify the distance in pixel:

\itemize{
\item{numeric:}{ Single numeric values, e.g. \code{arg_input = c(2, 3.554, 69, 100.67)}. If no unit
is specified the input will be interpreted as pixels.}
\item{character:}{ Suffixed with \emph{'px'}, e.g. \code{arg_input = c('2px', '3.554px', '69px', '100.67px')}}
}

Note: The unit pixel (px) is used for distances as well as for areas. If pixel
refers to a distance the pixel side length is meant. If pixel refers to an area the
number of pixels is meant.

\strong{2. According to the Systeme international d`unites (SI):}

Specifying distances in SI units e.g. \code{arg_input = c('2mm', '4mm')} etc.
requires the input to be a character as the unit must be provided as suffix.
Between the numeric value and the unit must be no empty space! Valid suffixes
can be obtained using the function \code{validUnitsOfLengthSI()}.

\strong{3. As vectors of class \code{unit}:}

Behind the scenes \code{SPATA2} works with the \code{units} package. Input
is converted into vectors of class \code{units}. Therefore, input can be directly
provided this way: \code{arg_input = units::set_unit(x = c(2,4), value = 'mm')}
Note that \emph{pixel} is not a valid unit in the \code{units} package. If you want
to specify the input in pixel you have to use input option 1. In pixel.
}

