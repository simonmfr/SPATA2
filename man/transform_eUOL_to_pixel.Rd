% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/t.R
\name{transform_euol_to_pixel}
\alias{transform_euol_to_pixel}
\alias{transform_euol_to_pixels}
\title{Convert from European Units of Length to pixels}
\usage{
transform_euol_to_pixel(
  input,
  object = NULL,
  image_dims = NULL,
  method = NULL,
  round = FALSE
)

transform_euol_to_pixels(
  input,
  object = NULL,
  image_dims = NULL,
  method = NULL,
  round = FALSE,
  as_numeric = TRUE
)
}
\arguments{
\item{input}{Distance as European unit of length. See details for more.}

\item{object}{A valid \code{SPATA2} object or \code{NULL}. If specified the
distance scaling is adjusted to the current resolution of the image inside
the object. If \code{NULL}, \code{image_dims} and \code{method} must be specified.}

\item{image_dims}{Numeric vector of length two. Specifies the dimensions
of the image to which the distance is scaled. First value corresponds to
the width, second value corresponds to the height of the image.

Ignored if \code{object} is specified (carries needed information).}

\item{method}{The spatial -omic method by name as a character value or S4 object
of class \code{SpatialMethod}. Specifies the method and thus the frame size of
the original image in European units of length. If character, must be one of \code{validSpatialMethods()}.

Ignored if \code{object} is specified (carries needed information).}

\item{round}{Numeric value or \code{FALSE}. If numeric, given to \code{digits}
of \code{base::round()}. Rounds transformed values before they are returned.}

\item{as_numeric}{Logical value. If \code{TRUE}, forces the output to be numeric.
This means that the unit is not \bold{not} suffixed.}
}
\value{
Transformed input. Vector of the same length as input. Function
\code{transform_euol_to_pixel()} always returns a single numeric value. Function
\code{transform_euol_to_pixels()} returns a numeric vector by default. If \code{as_numeric}
is \code{FALSE}, the output is a string suffixed with \emph{px}.
}
\description{
Transforms European units of length (e.g. \emph{'2mm'}, \emph{'400.50um'})
to pixel values depending on the original size of spatial -omic methods.
}
\details{
Several functions in \code{SPATA2} have arguments that take \emph{distance input}.
To specifically refer to a distance the unit must be specified. There are
three ways to create valid input for these arguments.

\bold{1. Distance in pixel}:

There are two valid input options to specify the distance in pixel:

\itemize{
\item{numeric:}{ Single numeric values, e.g. \code{arg_input <- c(2, 3.554, 69, 100.67)}. If no unit
is specified the input will be interpreted as pixels.}
\item{character:}{ Suffixed with \emph{'px'}, e.g. \code{arg_input <- c('2px', '3.554px', '69px', '100.67px')}}
}

\bold{2. Distance in European units of length (euol)}:

Specifying distances in European units of length e.g. \code{arg_input <- c('2mm', '4mm')} etc.
requires the input to be a character as the unit must be provided as suffix. Between the numeric
value and the unit must be no empty space! Unit suffixes must be one of
\emph{'m', 'dm', 'cm', 'mm', 'um', 'nm'}.

\strong{3. As vectors of class \code{unit}:}

Behind the scenes \code{SPATA2} works with the \code{units}-package. Input
is converted into vectors of class \code{units}. Therefore, input can be directly
provided this way: \code{arg_input <- units::set_unit(x = c(2,4), value = 'mm')}
Note that \emph{pixel} is not a valid unit in the \code{units} package. If you want
to specify the input in pixel you have to use input option 1. Distance in pixel.
}
